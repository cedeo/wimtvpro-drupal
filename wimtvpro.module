<?php
  /** 
    * @file
	* This file is use for module wimtvpro.
	*
	*/
require_once(drupal_get_path('module', 'wimtvpro') . "/wimtvpro.function.php");
// Load default implementations of insert hooks for core modules.
require_once(drupal_get_path('module', 'wimtvpro') . '/required/form.inc');
require_once(drupal_get_path('module', 'wimtvpro') . '/required/block.inc');
require_once(drupal_get_path('module', 'wimtvpro') . '/required/insert.inc');
require_once(drupal_get_path('module', 'wimtvpro') . '/required/playlist.inc');
require_once(drupal_get_path('module', 'wimtvpro') . '/api/wimtv_api.php');
require_once(drupal_get_path('module', 'wimtvpro') . '/wimtvpro.admin.php');
require_once(drupal_get_path('module', 'wimtvpro') . '/wimtvpro.help.php');
require_once(drupal_get_path('module', 'wimtvpro') . '/wimtvpro.report.php');
require_once(drupal_get_path('module', 'wimtvpro') . '/views/wimbox.php');
require_once(drupal_get_path('module', 'wimtvpro') . '/views/wimvod.php');
require_once(drupal_get_path('module', 'wimtvpro') . '/views/wimlive.php');
require_once(drupal_get_path('module', 'wimtvpro') . '/views/playlist.php');


//Principal menu Admin and for User
function wimtvpro_menu() {
    $items = array();
    $items['admin/config/wimtvpro'] =
        array(
            'title' => 'Wimtv configuration',
            'description' => 'On this module config url for Api Wimtv',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('wimtvpro_admin'),
            'access arguments' => array('administer users'),
        );
    $items['admin/config/wimtvpro/wimbox'] =
        array(
            'title' => 'WimBox',
            'description' => 'Allows admins manage media wimtv',
            'page callback' => 'wimtvpro_wimbox',
            'page arguments' => array('wimtvpro_wimbox'),
            'access arguments' => array('administer users'),
            'weight' => 0
        );
    $items['admin/config/wimtvpro/wimvod'] =
        array(
            'title' => 'WimVod',
            'description' => 'Allows admins manage streaming wimtv',
            'page callback' => 'wimtvpro_wimvod',
            'page arguments' => array('wimtvpro_wimvod'),
            'access arguments' => array('administer users'),
            'weight' => 1
        );
    $items['admin/config/wimtvpro/playlist'] =
        array(
            'title' => 'Playlist',
            'description' => 'Manage playlist of media wimtv',
            'page callback' => 'wimtvpro_playlist',
            'page arguments' => array('wimtvpro_playlist'),
            'access arguments' => array('administer users'),
            'weight' => 1
        );
    $items['admin/config/wimtvpro/playlist/modify/%'] =
        array(
            'page callback' => 'drupal_get_form',
            'page arguments' => array('wimtvpro_playlist_mod', 5),
            'access arguments' => array('administer users'),
            'type' =>  MENU_CALLBACK,
        );
    $items['admin/config/wimtvpro/upload'] =
        array(
            'title' => 'Upload Video',
            'description' => 'Video import',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('wimtvpro_upload_form'),
            'access arguments' => array('administer users'),
            'weight' => 2
        );
    $items['admin/config/wimtvpro/wimlive'] =
        array(
            'title' => 'WimLive',
            'description' => 'Configure your live event',
            'page callback' => 'wimtvpro_wimlive',
            'page arguments' => array('wimtvpro_wimlive'),
            'access arguments' => array('administer users'),
            'weight' => 3
        );
    $items['admin/config/wimtvpro/mypersonalBlock'] =
        array(
            'title' => 'My personal detail',
            'description' => 'Configuration personal detail Wimtv block',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('wimtvpro_blockUser_config'),
            'access arguments' => array('administer users'),
            'weight' => 4
        );
    $items['admin/config/wimtvpro/report'] =
        array(
            'title' => 'Report',
            'description' => 'My Report Wimtv',
            'page callback' => 'wimtvpro_report',
            'page arguments' => array('wimtvpro_report'),
            'access arguments' => array('administer users'),
            'weight' => 5
        );
    $items['admin/config/wimtvpro/wimlive/insert'] =
        array(
            'title' => 'Add Event',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('wimtvpro_wimlive_form'),
            'access arguments' => array('administer users'),
            'type' =>  MENU_CALLBACK,
        );
    $items['admin/config/wimtvpro/wimlive/webproducer/%'] =
        array(
            'file' => 'required/live_webproducer.php',
            'page arguments' => array('wimtvproWebProducer',5),
            'access arguments' => array('administer users'),
            'page callback' => 'wimtvproWebProducer',
            'access callback' => TRUE,
            'type' =>  MENU_CALLBACK
        );
    $items['admin/config/wimtvpro/wimlive/modify/%'] =
        array(
            'title' => 'Modify Event',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('wimtvpro_wimlive_formModify', 5),
            'access arguments' => array('administer users'),
            'type' =>  MENU_CALLBACK,
        );
    $items['admin/config/wimtvpro/registration'] =
        array(
            'file' => 'wimtvpro_registration.php',
            'title' => 'Registration WimTv',
            'page arguments' => array('wimtvproRegistration'),
            'access callback' => TRUE,
            'type' =>  MENU_CALLBACK
        );
    $items['admin/config/wimtvpro/wimlive/delete/%'] =
        array(
            'title' => 'Delete Event',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('wimtvpro_wimlive_delete', 5),
            'access arguments' => array('administer users'),
            'type' =>  MENU_CALLBACK,
        );
    $items['wimtvpro/elencoLive'] =
        array(
            'file' => 'required/wimlive.inc',
            'page callback' => 'wimtvpro_tableLive',
            'access arguments' => array('access content'),
            'type' =>  MENU_CALLBACK,
        );
    $items['wimtvpro/viewEmbeddedPlaylist/%'] =
        array(
            'page callback' => 'wimtvpro_embeddedPlaylist_output',
            'page arguments' => array('wimtvpro_admin'),
            'access arguments' => array('access content'),
            'type' =>  MENU_CALLBACK,
        );
    $items['admin/config/wimtvpro/embedded'] =
        array(
            'title' => 'Video Embedded',
            'page callback' => 'wimtvpro_embedded_output',
            'page arguments' => array('wimtvpro_admin'),
            'access arguments' => array('administer users'),
            'type' =>  MENU_CALLBACK,
        );
    $items['admin/config/wimtvpro/embeddedAll'] =
        array(
            'title' => 'Preview Embedded',
            'page callback' => 'wimtvpro_embeddedAll_output',
            'page arguments' => array('wimtvpro_admin'),
            'access arguments' => array('administer users'),
            'type' =>  MENU_CALLBACK,
        );
    $items['admin/config/wimtvpro/wimtvproCallAjax'] =
        array(
            'file' => 'wimtvpro.sql.php',
            'page arguments' => array('wimtvproCallAjax'),
            'access callback' => TRUE,
            'type' =>  MENU_CALLBACK
        );
    $items['admin/config/wimtvpro/wimtvproCallSync'] =
        array(
            'file' => 'wimtvpro.sync.php',
            'page arguments' => array('wimtvproCallSync'),
            'access callback' => TRUE,
            'type' =>  MENU_CALLBACK
        );
    $items['admin/config/wimtvpro/pricing'] =
        array(
            'file' => 'required/pricing.inc',
            'access callback' => TRUE,
            'type' =>  MENU_CALLBACK
        );
    $items['wimtvpro/embedded'] =
        array(
            'title' => 'Video Embedded',
            'page callback' => 'wimtvpro_embedded_output',
            'page arguments' => array('wimtvpro_public'),
            'access arguments' => array('access content'),
            'type' =>  MENU_CALLBACK
        );
    $items['wimtvpro'] =
        array(
            'title' => 'WimVod Video',
            'page arguments' => array('wimtvpro_public'),
            'page callback' => 'wimtvpro_public',
            'access arguments' => array('access content'),
            'type' =>  MENU_CALLBACK
        );
    $items['wimlive'] =
        array(
            'title' => 'Live',
            'page arguments' => array('wimtvpro_live_public'),
            'page callback' => 'wimtvpro_live_public',
            'access arguments' => array('access content'),
            'type' =>  MENU_NORMAL_ITEM
        );
    $items['wimtvpro/viewEmbeddedPlayer/%'] =
        array(
            'page callback' => 'wimtvpro_plus_embeddedAll_output',
            'page arguments' => array('wimtvpro_admin'),
            'access arguments' => array('access content'),
            'type' =>  MENU_CALLBACK,
        );
    $items['wimtvpro/viewEmbeddedPlaylist/%'] =
        array(
            'page callback' => 'wimtvpro_plus_embeddedPlaylist_output',
            'page arguments' => array('wimtvpro_admin'),
            'access arguments' => array('access content'),
            'type' =>  MENU_CALLBACK,
        );
    return $items;

}

function wimtvpro_admin_paths_alter(&$paths) {
    $paths['admin/config/wimtvpro/wimlive/webproducer/*'] = FALSE;
}

function wimtvpro_schema_alter(&$schema) {
    $schema['wimtvpro_playlist'] =
        array(
            'description' => t('Playlist Api WIMTV'),
            'fields' => array('id' => array('description' => t('Id of Playlist'),
                              'type' => 'serial',
                              'not null' => TRUE),
                              'name' => array('description' => t('Name of Playlist'),
                                              'type' => 'text',
                                              'not null' => FALSE),
                              'listVideo' => array('description' => t('List video contentidentifier'),
                                                   'type' => 'text',
                                                   'not null' => FALSE),
                              'option' => array('description' => t('option playlist'),
                                                'type' => 'text',
                                                'not null' => FALSE),
                              'uid' => array('description' => t('User identifier'),
                                             'type' => 'varchar',
                                             'length' => 100,
                                             'not null' => TRUE),),
            'primary key' => array('id'),
            'unique keys' => array('mycolumn1' => array('id'))
        );
    return $schema;
}

function wimtvpro_access() {
  return user_access('administer content') && user_access('use PHP for settings');
}

//Create object for support json and array
function wimtvpro_objectToArray($d) {
  if (is_object($d)) {
  // Gets the properties of the given object
  // with get_object_vars function
    $d = get_object_vars($d);
  }

  if (is_array($d)) {
  /*
   * Return array converted to object
   * Using __FUNCTION__ (Magic constant)
   * for recursive call
   */
    return array_map(__FUNCTION__, $d);
  }
  else {
    return $d;
  }
}

//Install function for jquery and css
function wimtvpro_install_jquery($sortable=FALSE, $private=FALSE) {
    global $base_url;
    drupal_add_library('system', 'ui');
    drupal_add_js("var url_pathPlugin ='" . $base_url . "';" , "inline", array('group' => CSS_DEFAULT, 'every_page' => TRUE));
    drupal_add_js(drupal_get_path('module', 'wimtvpro') . '/jquery/colorbox/js/jquery.colorbox.js');
    drupal_add_css(drupal_get_path('module', 'wimtvpro') . '/jquery/colorbox/css/colorbox.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
    drupal_add_js(drupal_get_path('module', 'wimtvpro') . '/jquery/jwplayer/jwplayer.js');
    if ($private==FALSE) {

      drupal_add_css(drupal_get_path('module', 'wimtvpro') . '/css/wimtvpro_public.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
      drupal_add_js(drupal_get_path('module', 'wimtvpro') . '/wimtvpro.js');
      drupal_add_js('jQuery(document).ready(function() { jQuery("ul.itemsPublic li a").colorbox();});' , 'inline');
    }
    else {
      drupal_add_css(drupal_get_path('module', 'wimtvpro') . '/css/wimtvpro.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
      drupal_add_css(drupal_get_path('module', 'wimtvpro') . '/jquery/css/redmond/jquery-ui-1.8.21.custom.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));

      drupal_add_js('jQuery(document).ready(function(){

        jQuery("a.viewThumb").click( function(){
                      var basePath = Drupal.settings.basePath;
                      jQuery(this).colorbox({href:url_pathPlugin  + "/admin/config/wimtvpro/"  + jQuery(this).attr("id")});
                    });
                    jQuery("a.wimtv-thumbnail").click( function(){
                        var basePath = Drupal.settings.basePath;
                        if( jQuery(this).parent().children(".headerBox").children(".icon").children("a.viewThumb").length  ) {
                            var url = jQuery(this).parent().children(".headerBox").children(".icon").children("a.viewThumb").attr("id");
                            jQuery(this).colorbox({href:url_pathPlugin  + "/admin/config/wimtvpro/" + url});
                        }
                    });
      });', 'inline');

    if ($sortable) {
      drupal_add_library('system', 'ui.sortable');


      drupal_add_js('
    jQuery(document).ready(function(){

    /*SORTABLE*/
    jQuery( ".items" ).sortable({
    placeholder: "ui-state-highlight",
    handle : ".icon_moveThumbs",
    });

    /*SAVE SORTABLE*/
    jQuery("#save").click(function(){
    var ordina =	jQuery(".items").sortable("toArray") ;

    jQuery.ajax({
    context: this,
    url: "' . wimtvpro_checkCleanUrl("admin/config/wimtvpro/", "wimtvproCallAjax") . '",
    type: "GET",
    dataType: "html",
    data: "namefunction=ReSortable&ordina=" + ordina ,

    beforeSend: function(){
    jQuery(".icon").hide();
    jQuery(".loader").show();
    },

    success: function(data) {

    jQuery(".icon").show();
    jQuery(".loader").hide();

    },

    error: function(request,error) {
    alert(request.responseText);
    }



    });
    });

    });	', 'inline');

    }
    drupal_add_js(drupal_get_path('module', 'wimtvpro') . '/wimtvpro.js');
    }
}

function wimtvpro_embedded_output() {
$output = "";
global $base_url;
$urlEmbedded = variable_get("urlEmbeddedPlayerWimtv");
$replaceContent = variable_get('replaceContentWimtv');
//echo $_GET['q'];
$code = explode("embedded/", $_GET['q']);
//echo $code;
//echo $code[1];
if (count($code)>1) {

$codeArra = explode("/", $code[1]);
$contentItem = $codeArra[0];
$streamItem = $codeArra[1];

//View Details 	

$jSonST =wimtvpro_detail_showtime(true, $streamItem);
$arrayjSonST = json_decode($jSonST);

$arrayST["showtimeIdentifier"] = $arrayjSonST->{"showtimeIdentifier"};
$arrayST["title"] = $arrayjSonST->{"title"};
$arrayST["duration"] = $arrayjSonST->{"duration"};
$arrayST["categories"] = $arrayjSonST->{"categories"};
$arrayST["description"] = $arrayjSonST->{"description"};
$arrayST["thumbnailUrl"] = $arrayjSonST->{"thumbnailUrl"};
$arrayST["contentId"] = $arrayjSonST->{"contentId"};
$arrayST["url"] = $arrayjSonST->{"url"};
$ch = curl_init();
if (variable_get('nameSkin')!="") {
  $directory = file_create_url('public://skinWim');
  $skin = "&skin=" . $directory . "/" . variable_get('nameSkin') . ".zip";
}
else
  $skin = "&skin=" . $base_url . "/" . drupal_get_path('module', 'wimtvpro') . "/skin/default.zip";

$url = variable_get("basePathWimtv") . variable_get("urlVideosWimtv") . "/" . $arrayST["contentId"] . '/embeddedPlayers';
$url .= "?get=1&width=" . variable_get('widthPreview') . "&height=" . variable_get('heightPreview') . $skin;
$credential = variable_get("userWimtv") . ":" . variable_get("passWimtv");
curl_setopt($ch, CURLOPT_URL,  $url);
curl_setopt($ch, CURLOPT_VERBOSE, 0);
      curl_setopt($ch, CURLOPT_HTTPHEADER, array('Accept-Language: en-us,en;'));
curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
curl_setopt($ch, CURLOPT_USERPWD, $credential);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
$response = curl_exec($ch);


$output .= "<div style='text-align:center;'>" . $response;

$output .= "<h3>" . $arrayST["title"] . "</h3>";
$output .= "<p>" . $arrayST["description"] . "</p>";
$output .= "<p>Duration: <b>" . $arrayST["duration"] . "</b>";

$output .= "<br/>Categories<br/>";
foreach ($arrayST["categories"] as $key => $value) {
$valuescCatST = "<i>" . $value->categoryName . ":</i> ";
//foreach ($valuescCatST as $key=>$cat){
//	$output .= "<p>Categories: " . $cat->categoryName . "</p>";		
//}
$output .= $valuescCatST;
foreach ($value->subCategories as $key => $value) {
  $output .= $value->categoryName . ", ";
}
$output = drupal_substr($output, 0, -2); 
$output .= "<br/>";
}

//$output .=$arrayST["categories"];
$output .= "</p></div>";

echo $output;
//return  $output;

}

}

function wimtvpro_embeddedAll_output() {
  $urlEmbedded = variable_get("urlEmbeddedPlayerWimtv");
  $replaceContent = variable_get('replaceContentWimtv');
  //echo $_GET['q'];
  $code = explode("embeddedAll/", $_GET['q']);
  //echo $code;
  //echo $code[1];
  if (count($code)>1) {
    $codeArra = explode("/", $code[1]);
    $contentItem = $codeArra[0];
    $result = db_query("SELECT * FROM {wimtvpro_videos} WHERE contentidentifier='" . $contentItem . "'");
    $video = $result->fetchAll();
    if (variable_get('nameSkin')!="") {
      $directory = file_create_url('public://skinWim');
    }
    else
      $directory = base_path() . drupal_get_path('module', 'wimtvpro');
	  
	$output = "";
    $dimensions = "width:" . variable_get('widthPreview') . ",height:" . variable_get('heightPreview');
	$dimension = " width='" . (variable_get('widthPreview')+50) . "px' height='" . (variable_get('heightPreview')+50)  . "px'";	
    //$dirJwPlayer = drupal_get_path('module', 'wimtvpro') . "/jquery/jwplayer/player.swf";
    
    $dimensioneFissaW = variable_get('widthPreview');
	$dimensioneFissaH = variable_get('heightPreview') + 100;
	$output .= "<div style='text-align:center;width:" . $dimensioneFissaW . "px; height:" . $dimensioneFissaH .  "px'>";
    $output .= "<div id='container'></div>";
	
	$dimension = " width='" . (variable_get('widthPreview')+50) . "px' height='" . (variable_get('heightPreview')+50)  . "px'";
	$configFile  = wimtvpro_viever_jwplayer ($_SERVER['HTTP_USER_AGENT'],$video[0]->contentidentifier,$video);
	
	$output .= "<script type='text/javascript'>jwplayer('container').setup({";
    if (variable_get('nameSkin')!="") $output .= "skin: '" . $directory . "/" . variable_get('nameSkin') . ".zip',";
	else $output .= "skin: '" . base_path() . drupal_get_path('module', 'wimtvpro') . "/skin/default.zip',";
	$embeddedEncode = str_replace("+", " " , urlencode("<iframe src='" . $GLOBALS['base_url'] . "/wimtvpro/viewEmbeddedPlayer/" . $video[0]->contentidentifier . "'" . $dimension . "></iframe>"));
	if (!isset($video[0]->urlThumbs)) $thumbs[1] = "";
	else $thumbs = explode ('"',$video[0]->urlThumbs);

	$urlPlay = explode("$$",$video[0]->urlPlay);
    $output .= $dimensions . "," . $configFile;
	
	$output .= "'plugins': {
			 
			   'sharing-3': {
				
				   'code': '" . $embeddedEncode   . "'
			   }},";
	
	$output .= "image: '" . $thumbs[1] . "',});</script>&nbsp;";

      $output .= "<h3>" . $video[0]->title . " (Preview)</h3>";
      $output .= "<p>Duration: <b>" . $video[0]->duration . "</b>";
      if (count($video[0]->categories)>0) {
        $output .= "<br/>Categories<br/>";
        foreach ($video[0]->categories as $key => $value) {
          $valuescCatST = "<i>" . $value->categoryName . ":</i> ";
          $output .= $valuescCatST;
          foreach ($value->subCategories as $key => $value) {
            $output .= $value->categoryName . ", ";
          }
          $output = drupal_substr($output, 0, -2); 
          $output .= "<br/>";
        }
      $output .= "</p>";
    }

	
    $output .= "</div>";

  }
  
  echo $output;

}

function wimtvpro_plus_embeddedAll_output() {
  $urlEmbedded = variable_get("urlEmbeddedPlayerWimtv");
  $replaceContent = variable_get('replaceContentWimtv');
  //echo $_GET['q'];
  $code = explode("viewEmbeddedPlayer/", $_GET['q']);
  //echo $code;

  $output = '';
  
  if (count($code)>1) {
    $codeArra = explode("/", $code[1]);
    $cI = $codeArra[0];
    $result = db_query("SELECT * FROM {wimtvpro_videos} WHERE contentidentifier='" . $cI . "'");
    $video = $result->fetchAll();
    if (variable_get('nameSkin')!="") {
		  $directory = file_create_url('public://skinWim');
		} 
	else {
		$directory = base_path() . drupal_get_path('module', 'wimtvpro');
	}
	  
	if (isset($video[0])){
	 
		$output = "<html><head>
		<script type='text/javascript' src='" . $GLOBALS['base_url']  . "/" . drupal_get_path('module', 'wimtvpro') . "/jquery/jwplayer/jwplayer.js'></script>
		";
		$output .= "</head><body><div style='text-align:left;'>";
		$output .= "<div id='container'></div>";
		$dimensions = "width:" . variable_get('widthPreview') . ",height:" . variable_get('heightPreview');
		//$dirJwPlayer = drupal_get_path('module', 'wimtvpro') . "/jquery/jwplayer/player.swf";
		$dirJwPlayer = $GLOBALS['base_url']  . "/" . drupal_get_path('module', 'wimtvpro') . "/jquery/jwplayer/player.swf";
		if (!isset($video[0]->urlThumbs)) $thumbs[1] = "";
		else $thumbs = explode ('"',$video[0]->urlThumbs);
		
		$dimension = " width='" . (variable_get('widthPreview')+50) . "px' height='" . (variable_get('heightPreview')+50)  . "px'";
		$embedded = str_replace("+", " " , urlencode("<iframe src='" . $GLOBALS['base_url'] . "/wimtvproplus/viewEmbeddedPlayer/" . $cI . "'" . $dimension . "></iframe>"));
		//echo $_SERVER['HTTP_USER_AGENT'];

		$configFile  = wimtvpro_viever_jwplayer ($_SERVER['HTTP_USER_AGENT'],$cI,$video);
	
		$output .= "<script type='text/javascript'>jwplayer('container').setup({";
		if (variable_get('nameSkin')!="") $output .= "skin: '" . $directory . "/" . variable_get('nameSkin') . ".zip',";
		else $output .= "skin: '" . $directory . "/skin/default.zip',";
		$output .= "'plugins': {
			 
			   'sharing-3': {
				   
					'code': '" . $embedded   . "'
			   }},";
			   
		/*$output .= " logo: {
		hide: 'false', position:'bottom-right',
        file: '" . $GLOBALS['base_url']  . "/" . drupal_get_path('module', 'wimtvproplus') . "/img/logo_player.png',
        link: '" . $GLOBALS['base_url']  . "'
		}, ";*/
		
		$urlPlay = explode("$$",$video[0]->urlPlay);
		
		$output .= $dimensions . "," . $configFile;
		
		$output .= "image: '" . $thumbs[1] . "',
			
			 
		});</script>&nbsp;";

		$output .= "</div></body></html>";
	} 
	else
	  echo "The video is being processed.";
  

  } 
  else {
  
    echo "Video does not exist.";
  
  }
  
  echo $output;

}

function wimtvpro_plus_embeddedPlaylist_output() {
      $playlist = "";
	  $code = explode("viewEmbeddedPlaylist/", $_GET['q']);
	  $output = "<html><head><script type='text/javascript' src='" . $GLOBALS['base_url']  . "/" . drupal_get_path('module', 'wimtvpro') . "/jquery/jwplayer/jwplayer.js'></script>";
      $output .= "</head><body><div style='text-align:center;'>";
	  $output .= "<div id='container'></div>";
	  $dirJwPlayer = $GLOBALS['base_url']  . "/" . drupal_get_path('module', 'wimtvpro') . "/jquery/jwplayer/player.swf";
	  if (count($code)>1) {
	
		  $arrayVid = explode(",",$code[1]);
		  
		  $result = db_query("SELECT * FROM {wimtvpro_playlist} WHERE id = '" . $code[1] . "'");
		  $array_playlist=$result->fetchAll();
		
		  $list = $array_playlist[0]->listVideo;
		  
		  $options = $array_playlist[0]->option;
		  $array_option = explode (",",$options);
		  $videoList = explode (",",$list);
		  $sql_where  = " 1=2 ";
		  for ($i=0;$i<count($videoList);$i++){
		  
			$sql_where .= "  OR contentidentifier='" . $videoList[$i] . "' ";
		  
		  }
		  
		  $sql_where = "AND (" . $sql_where . ")"; 
		  
		  $result_new = db_query("SELECT * FROM {wimtvpro_videos} WHERE uid='" . variable_get("userWimtv") . "' " . $sql_where);

	
          $array_videos  = $result_new->fetchAll();
          $array_videos_new_drupal = array();
		  for ($i=0;$i<count($videoList);$i++){
			 foreach ($array_videos  as $record_new) {
				if ($videoList[$i] == $record_new->contentidentifier){
					array_push($array_videos_new_drupal, $record_new);
				}
			}
		  }

		
		  $playlist = "";
		  foreach ($array_videos_new_drupal as $videoT){
		   
		    $result_video = db_query("SELECT * FROM {wimtvpro_videos} WHERE contentidentifier='" . $videoT->contentidentifier . "' ");
		    $video  = $result_video->fetchAll();
		    
		    $configFile  = wimtvpro_viever_jwplayer($_SERVER['HTTP_USER_AGENT'],$videoT->contentidentifier,$video,FALSE);
			if (!isset($videoT->urlThumbs)) $thumbs[1] = "";
		   else $thumbs = explode ('"',$videoT->urlThumbs);
			$playlist .= "{" . $configFile . " 'image':'" . $thumbs[1]  . "','title':'" . str_replace ("+"," ",urlencode($videoT->title)) . "'},";
			
		  }

		  $dimension = "width:" . variable_get('widthPreview') . ",height:" . variable_get('heightPreview')-10;

		  $output .= "<div id='container_playlist'></div>";
		  $playlistSize = "30%";
		  $dimensions = "width: '100%',";

		if (variable_get('nameSkin')!="") {
		  $directory = file_create_url('public://skinWim');
		} 
		else {
			$directory = base_path() . drupal_get_path('module', 'wimtvpro');
		}
		$dimension_embedded = " width='" . (variable_get('widthPreview')+50) . "px' height='" . (variable_get('heightPreview')+70)  . "px'";
		$embedded = str_replace("+", " " , urlencode("<iframe src='" . $GLOBALS['base_url'] . "/wimtvproplus/viewEmbeddedPlaylist/" . $code[1] . "'" . $dimension_embedded. "></iframe>"));
		$output .= "<script type='text/javascript'>jwplayer('container_playlist').setup({";
		
		$output .= "'plugins': {
			
			   'sharing-3': {
				 
				   'code': '" . $embedded . "'
			
			   }},";
		/*$output .= " logo: {
		hide: 'false', position:'bottom-right', 
        file: '" . $GLOBALS['base_url']  . "/" . drupal_get_path('module', 'wimtvproplus') . "/img/logo_player.png',
        link: '" . $GLOBALS['base_url']  . "'
		}, ";*/
        $options = array();
		foreach ($array_option as $value){		  
		  $array = explode(":",$value);
		  if ($array[0]!="")
			$options[$array[0]] = $array[1];
          
		}
		if ($options["loop"]!="no") $output .= "'repeat':'always',";  
		
		$isiPhone = (bool)strpos($_SERVER['HTTP_USER_AGENT'],'iPhone');
		$isiPad = (bool) strpos($_SERVER['HTTP_USER_AGENT'],'iPad');
		if (!$isiPad  AND !$isiPhone) 
			 $output .= "'flashplayer':'" . $dirJwPlayer . "',";
		if (variable_get('nameSkin')!="") $output .= "skin: '" . $directory . "/" . variable_get('nameSkin') . ".zip',";
		else $output .= "skin: '" . $directory . "/skin/default.zip',";
		
		$output .= $dimensions . "'playlist': [" .  $playlist . "],'playlist.position': 'right',	'playlist.size': '" . $playlistSize  . "'});</script>&nbsp;";
      }
	  else {
	    echo "Videos does not exist.";
	  }
	echo $output;
	echo "</div></body></html>";
}
